{
  "endpointURL" : "http://ldf.fi/warsa/sparql",
  "lasLocale" : "fi",
  "maxNGrams" : 3,
  "name" : "warsampo",
  "negativeLASFilters" : null,
  "positiveLASFilters" : null,
  "query" : "\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX ptype: <http://ldf.fi/warsa/places/place_types/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX atypes: <http://ldf.fi/warsa/actors/actor_types/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX cas: <http://ldf.fi/schema/narc-menehtyneet1939-45/>\nPREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX etype: <http://ldf.fi/warsa/events/event_types/>\nPREFIX hipla: <http://ldf.fi/schema/hipla/>\nPREFIX places: <http://ldf.fi/warsa/places>\nPREFIX actors: <http://ldf.fi/warsa/actors/>\nPREFIX text: <http://jena.apache.org/text#>\nPREFIX apf: <http://jena.hpl.hp.com/ARQ/property#>\nSELECT ?id ?label ?ngram ?source\nWHERE {\n{\nSELECT ?source  ?id ?ngram ?label ?rank_label ?sotilasarvolabel ?etunimet ?sukunimi \n    ?promotion_rank ?earliest_promotion_time ?birth_start ?birth_end \n    ?death_start ?death_end ?cas_date (COALESCE(?death_end, ?cas_date) AS ?death_date)\nWHERE\n{  \n BIND(0 AS ?source)\n    VALUES ?ngram {\n        <VALUES>\n    }\n  \tFILTER(STRLEN(?ngram)>2)\n    # Henkilö löytyy ainoastaan, jos haussa käytetään etunimiä/sotilasarvoa JA sukunimeä.\n    # Yhden pituiset ngrammit eivät osu mihinkään.\n    # Oletus: sukunimi aina viimeisenä\n    BIND(\"^([.a-zA-ZäÄöÖåÅ-]+?[\\\\. ])[ ]*([.a-zA-ZäÄöÖåÅ-]+?[. ])*[ ]*([.a-zA-ZäÄöÖåÅ-]+?[. ])*[ ]*([.a-zA-ZäÄöÖåÅ-]+)$\" AS ?nimiregex)\n    BIND(UCASE(REPLACE(?ngram, ?nimiregex, \"$4\")) AS ?sukunimi)\n    # Etunimi/sotilasarvo tai toinen nimi/etunimi (ja trimmataan mahdolliset välilyönnit)\n    BIND(REPLACE(REPLACE(?ngram, ?nimiregex, \"$1\"), \"^(.*?)[ ]*$\", \"$1\") AS ?ngrametu)\n    BIND(REPLACE(REPLACE(?ngram, ?nimiregex, \"$2\"), \"^([.a-zA-ZäÄöÖåÅ-]*?)[ ]*$\", \"$1\") AS ?ngramkeski)\n    # Pitää olla etunimi/sotilasarvo tai etunimen etukirjain. Nimi on vähintään kolmen kirjaimen pituinen.\n    FILTER(REGEX(?ngrametu, \"(^[a-zA-ZäÄöÖåÅ]\\\\.$)|(^[a-zA-ZäÄöÖåÅ]{3,}$)\"))\n    # Joko ei toista nimeä tai samat ehdot kuin etunimellä.\n    FILTER(REGEX(?ngramkeski, \"(^$)|(^[a-zA-ZäÄöÖåÅ]\\\\.$)|(^[a-zA-ZäÄöÖåÅ]{3,}$)\"))\n    BIND(UCASE(?ngrametu) AS ?etu)\n    # Ei hyväksytä muotoa E. Toinen Suku.\n    FILTER(?ngramkeski=\"\" || !(STRENDS(?ngrametu, \".\") && !STRENDS(?ngramkeski, \".\")))\n    BIND(UCASE(?ngramkeski) AS ?keski)\n    BIND(CONCAT('\"',?sukunimi,'\"') AS ?qstring)\n    GRAPH <http://ldf.fi/warsa/actors> { ?id text:query ?qstring . }\n    ?id foaf:familyName ?familyName .\n        FILTER(?sukunimi = UCASE(?familyName))\n    ?id foaf:firstName ?etunimet .\n    BIND(CONCAT(?etunimet, ' ', ?familyName) AS ?label)\n    OPTIONAL { ?id actors:hasRank ?sotilasarvo . ?sotilasarvo skos:prefLabel ?sotilasarvolabel . }\n    OPTIONAL { \n        ?promotion_id a etype:Promotion ;\n            crm:P11_had_participant ?id ;\n            actors:hasRank ?promotion_rank_id ;\n            crm:P4_has_time-span ?timespan_id .\n        ?promotion_rank_id skos:prefLabel ?promotion_rank .\n        ?timespan_id crm:P82a_begin_of_the_begin ?earliest_promotion_time .\n    }\n    BIND(COALESCE(?promotion_rank, ?sotilasarvolabel) AS ?rank_label)\n    # Haettavan etunimen on löydyttävä etunimistä, haettavan etukirjaimen on oltava\n    # jonkin etunimen ensimmäinen kirjain tai \"etunimen\" on oltava sotilasarvo.\n    BIND(CONCAT(\"(^|[ ])\", substr(?etu, 1, 1)) as ?etukirjainre)\n    BIND(CONCAT(\"(^|[ ])\", substr(?keski, 1, 1)) as ?keskikirjainre)\n    BIND(CONCAT(\"(^|[ ])\", ?etu, \"($|[ ])\") AS ?etunimire)\n    BIND(CONCAT(\"(^|[ ])\", ?keski, \"($|[ ])\") AS ?toinennimire)\n    BIND(IF(STRLEN(?keski)=2, ?keskikirjainre, IF(?keski=\"\", \".\", ?toinennimire)) AS ?keskire)\n    BIND(IF(STRLEN(?etu)=2, ?etukirjainre, ?etunimire) AS ?eture)\n    FILTER(\n        IF(STRENDS(?etu, \".\"),\n            # Etunimen etukirjain (tämä otettava erikseen, sillä etukirjainta ei ole tarkoituksenmukaista verrata sotilasarvoon)\n            REGEX(?etunimet, ?etukirjainre) && REGEX(?etunimet, ?keskire), \n        # else\n            # Koko etunimi tai sotilasarvo\n      \t\t(REGEX(?etunimet, ?keskire, \"i\") && (REGEX(?etunimet, ?eture, \"i\"))) ||\n                IF(?keski != \"\",\n                    (REGEX(?rank_label, ?eture, \"i\") && REGEX(?etunimet, ?keskire, \"i\")),\n                # else\n                    REGEX(?rank_label, ?eture, \"i\")\n                )\n        )\n    )\n    OPTIONAL {\n        ?birth crm:P98_brought_into_life ?id .\n        ?birth crm:P4_has_time-span ?birth_date_id .\n        ?birth_date_id crm:P82a_begin_of_the_begin ?birth_start ; \n        crm:P82b_end_of_the_end ?birth_end .\n    }\n    OPTIONAL {\n        ?death crm:P100_was_death_of ?id .\n        ?death crm:P4_has_time-span ?death_date_id .\n        ?death_date_id crm:P82a_begin_of_the_begin ?death_start ; \n                    crm:P82b_end_of_the_end ?death_end .\n    }\n    OPTIONAL {\n        ?id owl:sameAs ?cas .\n        ?cas cas:kuolinaika ?cas_date .\n    }\n}\n}\n UNION\n{\nSELECT ?source  ?id ?label ?ngram\nWHERE\n{\n BIND(1 AS ?source)\n  VALUES ?ngram {\n    <VALUES>\n  }\n  FILTER(STRLEN(?ngram)>2 && UCASE(SUBSTR(?ngram,1,1))=SUBSTR(?ngram,1,1))\n  BIND(CONCAT('\"',REPLACE(?ngram,\"([\\\\+\\\\-\\\\&\\\\|\\\\!\\\\(\\\\)\\\\{\\\\}\\\\[\\\\]\\\\^\\\\\\\"\\\\~\\\\*\\\\?\\\\:\\\\/\\\\\\\\])\",\"\\\\\\\\$1\"),'\"') AS ?qstring) \n  GRAPH <http://ldf.fi/warsa/actors> { ?id text:query ?qstring . }\n  ?id a/rdfs:subClassOf* atypes:MilitaryUnit .\n  ?id rdfs:label|skos:prefLabel|skos:altLabel ?label .\n  FILTER(LCASE(STR(?label))=LCASE(STR(?ngram)))\n}\n}\n UNION\n{\nSELECT ?source  ?id ?label ?ngram ?type\n{\n BIND(2 AS ?source)\n  VALUES ?ngram {\n    <VALUES>\n  }\n  BIND(STRLANG(?ngram,\"fi\") AS ?label)\n  ?id rdfs:label|skos:prefLabel ?label .\n  ?id rdf:type/rdfs:subClassOf* hipla:Place .        \n  ?id a ?type .\n  MINUS { \n    ?id a ptype:Rakennettu_kohde .\n  }\n  MINUS { \n    ?id a ptype:Symboli .\n  }\n  \n}\n}\n}\n",
  "queryModifyingEveryPart" : false,
  "queryModifyingOnlyLastPart" : true,
  "queryUsingAllPermutations" : false,
  "queryUsingBaseform" : true,
  "queryUsingInflections" : [ ],
  "queryUsingOriginalForm" : false
}