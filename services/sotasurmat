{"name":"sotasurmat","endpointURL":"http://ldf.fi/narc-menehtyneet1939-45/sparql","lasLocale":"fi","queryUsingOriginalForm":true,"queryUsingBaseform":true,"queryUsingInflections":[],"queryModifyingEveryPart":false,"queryModifyingOnlyLastPart":true,"queryUsingAllPermutations":false,"query":"PREFIX text: <http://jena.apache.org/text#>\nPREFIX apf: <http://jena.hpl.hp.com/ARQ/property#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX surmat: <http://ldf.fi/schema/narc-menehtyneet1939-45/>\nSELECT ?id ?label ?ngram ?sotilasarvo ?kuolinaika ?menehtymisluokka ?ngrametu ?etunimet ?sukunimi {\n  VALUES ?ngram {\n    <VALUES>\n  }\n  # Henkilö löytyy ainoastaan, jos haussa käytetään etunimiä/sotilasarvoa JA sukunimeä.\n  # Yhden pituiset ngrammit eivät osu mihinkään.\n  \n  # Oletus: sukunimi aina viimeisenä\n  BIND(\"^(.+?[. ])[ ]*(.+?[. ])*[ ]*(.+)$\" AS ?nimiregex)\n  BIND(UCASE(REPLACE(?ngram, ?nimiregex, \"$3\")) AS ?sukunimi)\n  # Etunimi/sotilasarvo tai toinen nimi/etunimi (ja trimmataan mahdolliset välilyönnit)\n  BIND(REPLACE(REPLACE(?ngram, ?nimiregex, \"$1\"), \"^(.*?)[ ]*$\", \"$1\") AS ?ngrametu)\n  BIND(REPLACE(REPLACE(?ngram, ?nimiregex, \"$2\"), \"^(.*?)[ ]*$\", \"$1\") AS ?ngramkeski)\n  # Pitää olla etunimi/sotilasarvo tai etunimen etukirjain. Nimi on vähintään kolmen kirjaimen pituinen.\n  FILTER(REGEX(?ngrametu, \"(^\\\\w\\\\.$)|(^\\\\w{3,}$)\"))\n  # Joko ei toista nimeä tai samat ehdot kuin etunimellä.\n  FILTER(REGEX(?ngramkeski, \"(^$)|(^\\\\w\\\\.$)|(^\\\\w{3,}$)\"))\n  BIND(UCASE(?ngrametu) AS ?etu)\n  # Ei hyväksytä muotoa E. Toinen Suku.\n  FILTER(?ngramkeski=\"\" || !(STRENDS(?ngrametu, \".\") && !STRENDS(?ngramkeski, \".\")))\n  BIND(UCASE(?ngramkeski) AS ?keski)\n  BIND(CONCAT('\"',?sukunimi,'\"') AS ?qstring)\n  ?id text:query (?qstring) .\n  ?id surmat:sukunimi ?sukunimi .\n  ?id surmat:etunimet ?etunimet .\n  ?id a foaf:Person .\n  ?id skos:prefLabel  ?label .\n  ?id surmat:sotilasarvo ?sotilasarvo .\n  ?id surmat:kuolinaika ?kuolinaika .\n  ?id surmat:menehtymisluokka ?menehtymisluokka .\n  ?sotilasarvo skos:prefLabel ?sotilasarvolabel .\n  # Haettavan etunimen on löydyttävä etunimistä, haettavan etukirjaimen on oltava\n  # jonkin etunimen ensimmäinen kirjain tai \"etunimen\" on oltava sotilasarvo.\n  BIND(CONCAT(\"(^|\\\\W)\", substr(?etu, 1, 1)) as ?etukirjainre)\n  BIND(CONCAT(\"(^|\\\\W)\", substr(?keski, 1, 1)) as ?keskikirjainre)\n  BIND(CONCAT(\"(^|\\\\W)\", ?etu, \"($|\\\\W)\") AS ?etunimire)\n  BIND(CONCAT(\"(^|\\\\W)\", ?keski, \"($|\\\\W)\") AS ?toinennimire)\n  BIND(IF(STRLEN(?keski)=2, ?keskikirjainre, IF(?keski=\"\", \".\", ?toinennimire)) AS ?keskire)\n  BIND(IF(STRLEN(?etu)=2, ?etukirjainre, ?etunimire) AS ?eture)\n  FILTER(\n    IF(STRENDS(?etu, \".\"),\n      # Etunimen etukirjain (tämä otettava erikseen, sillä etukirjainta ei ole tarkoituksenmukaista verrata sotilasarvoon)\n      REGEX(?etunimet, ?etukirjainre, \"i\") && REGEX(?etunimet, ?keskire, \"i\"), \n    # else\n      # Koko etunimi tai sotilasarvo\n      (REGEX(?etunimet, ?keskire, \"i\") && (REGEX(?etunimet, ?eture, \"i\")) || REGEX(?sotilasarvolabel, ?eture, \"i\")) \n    )\n  )\n}","maxNGrams":5}